{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport moment from \"moment\";\n\timport Field from \"./Field.svelte\";\n\timport About from \"./About.svelte\";\n\n\tconst FORMAT_ISO = \"YYYY-MM-DD\";\n\tconst FORMAT_FULL = \"dddd \" + FORMAT_ISO;\n\tconst FORMAT_DAY = 'dddd';\n\n  const stored = localStorage.getItem(\"birth_date\");\n  const initial = stored ? moment(stored) : moment();\n\n  let year = initial.year();\n  let month = initial.month() + 1;\n\tlet day = initial.date();\n\n\tlet now = moment();\n\t\n\tlet when = 40;\n\tlet whenText = 'Forty';\n\tconst stones = [\n\t\t[20, 'Twinty'],\n\t\t[30, 'Thirty'],\n\t\t[40, 'Forty'],\n\t\t[50, 'Fifty'],\n\t\t[60, 'Sixty'],\n\t\t[70, 'Seventy'],\n\t\t[80, 'Eighty'],\n\t\t[90, 'Ninty'],\n\t];\n\n  $: birth = moment([year, month - 1, day]);\n\t$: dayOfWeek = birth.isValid()\n\t\t? birth.format(FORMAT_DAY)\n\t\t: \"Invalid date\";\n  $: localStorage.setItem(\n\t\t\"birth_date\",\n\t\tbirth.format(FORMAT_ISO)\n\t);\n  $: weeks = now.diff(birth, \"weeks\");\n  $: target = birth.clone().add(when, \"years\");\n  $: weeksUntilWhen = target.diff(now, \"weeks\");\n</script>\n\n<svelte:head>\n  <title>Perspective</title>\n</svelte:head>\n\n<div class=\"wrapper p3 vgap2\">\n\n\t<About />\n\n\t<h2>When is your birthday?</h2>\n\n\t<div class=\"hor hgap2\">\n\t\t<Field label=\"Day\">\n\t\t\t<input\n\t\t\t\tclass=\"huge black center\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tbind:value={day}\n\t\t\t/>\n\t\t</Field>\n\n\t\t<Field label=\"Month\">\n\t\t\t<input\n\t\t\t\tclass=\"huge black center\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tbind:value={month}\n\t\t\t/>\n\t\t</Field>\n\t</div>\n\n\t<div class=\"ver\">\n\t\t<Field label=\"Year\">\n\t\t\t<input\n\t\t\t\tclass=\"swell huge black center\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tbind:value={year}\n\t\t\t/>\n\t\t</Field>\n\t</div>\n\n\t<p class=\"center input\">\n\t\t<span class=\"big black\">{dayOfWeek}</span>\n\t\t<span class=\"small\">({weeks} weeks)</span>\n\t</p>\n\n\t<div class=\"py3 vgap2\">\n\t\t<h2>Weeks until...?</h2>\n\t\t<select class=\"big black w100\" bind:value={when}>\n\t\t\t{#each stones as stone}\n\t\t\t\t<option class=\"small\" value={stone[0]}>{stone[1]}</option>\n\t\t\t{/each}\n\t\t</select>\n\n\t\t<p>It will be on <span class=\"bold\">{target.format(FORMAT_FULL)}</span></p>\n\t\t<p>You have <span class=\"bold\">{weeksUntilWhen}</span> weeks left</p>\n\n\t\t{#if weeksUntilWhen > 0 && weeksUntilWhen < 3000}\n\t\t<div class=\"hor wrap\">\n\t\t\t{#each Array(Math.abs(weeksUntilWhen)) as _, i}\n\t\t\t<div\n\t\t\t\tclass=\"box\"\n\t\t\t\tclass:blue={weeksUntilWhen > 0}\n\t\t\t\tclass:red={weeksUntilWhen < 0}\n\t\t\t/>\n\t\t\t{/each}\n\t\t</div>\n\t\t{:else if weeksUntilWhen < 0}\n\t\t\t<div>Too late</div>\n\t\t{:else if weeksUntilWhen > 3000}\n\t\t\t<div>You have plenty of time</div>\n\t\t{/if}\n\t</div>\n</div>\n\n<style>\n\t.box {\n\t\tmargin: 2px;\n\t\twidth: 10px;\n\t\theight: 10px;\n\t}\n\t.blue {background-color: blue}\n\t.red {background-color: red}\n</style>\n"
  ],
  "names": [],
  "mappings": "AAqHC,IAAI,cAAC,CAAC,AACL,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACb,CAAC,AACD,KAAK,cAAC,CAAC,gBAAgB,CAAE,IAAI,CAAC,AAC9B,IAAI,cAAC,CAAC,gBAAgB,CAAE,GAAG,CAAC"
}